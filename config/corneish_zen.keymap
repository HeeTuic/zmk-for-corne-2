/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "MAC";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R      &kp T         &kp Y      &kp U      &kp I      &kp O    &kp P          &trans
&trans  &kp A  &kp S  &kp D   &kp F      &kp G         &kp H      &kp J      &kp K      &kp L    &kp BACKSPACE  &trans
&trans  &kp Z  &kp X  &kp C   &kp V      &kp B         &kp N      &kp M      &kp COMMA  &kp DOT  &kp ENTER      &trans
                      &trans  &lt 3 TAB  &kp LSHIFT    &kp SPACE  &lt 2 TAB  &trans
            >;
        };

        windows_layer {
            display-name = "WIN";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R      &kp T        &kp Y      &kp U      &kp I      &kp O    &kp P      &trans
&trans  &kp A  &kp S  &kp D   &kp F      &kp G        &kp H      &kp J      &kp K      &kp L    &kp BSPC   &trans
&trans  &kp Z  &kp X  &kp C   &kp V      &kp B        &kp N      &kp M      &kp COMMA  &kp DOT  &kp ENTER  &trans
                      &trans  &lt 3 TAB  &kp LSHFT    &kp SPACE  &lt 2 TAB  &trans
            >;
        };

        right_layer {
            display-name = "RIG";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1   &kp N2        &kp N3     &kp N4   &kp N5     &kp N6  &kp N7    &kp N8     &kp N9     &kp N0     &trans
&trans  &kp DEL  &kp CAPSLOCK  &kp PSCRN  &kp INS  &none      &trans  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &trans   &trans        &trans     &trans   &none      &trans  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans
                               &trans     &trans   &kp ESC    &trans  &trans    &trans
            >;
        };

        left_layer {
            bindings = <
&trans  &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp GRAVE  &kp TILDE  &trans
&trans  &kp DQT   &kp LBKT  &kp LBRC  &kp LPAR  &trans       &kp FSLH   &kp MINUS  &kp EQUAL  &kp COLON  &kp SEMI   &trans
&trans  &kp SQT   &kp RBKT  &kp RBRC  &kp RPAR  &trans       &kp BSLH   &kp UNDER  &kp PLUS   &kp PIPE   &kp QMARK  &trans
                            &trans    &trans    &trans       &trans     &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0    &bt BT_SEL 2  &out OUT_TOG   &tog 1  &kp C_MUTE    &kp C_NEXT  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1    &bt BT_SEL 3  &kp C_BRI_UP   &trans  &kp C_VOL_UP  &kp C_PP    &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &bt BT_CLR      &bt BT_SEL 4  &kp C_BRI_DEC  &trans  &kp C_VOL_DN  &kp C_PREV  &trans
                         &trans   &trans   &trans          &trans        &trans         &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        a {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
